# Visit https://build.rubrik.com
# Author: Steven Tong
# Date: 1/31/21

input {
  beats {
    port => 5044
    type => "beats"
  }
}

filter {
  if [type] == "beats" {

    json {
      source => "message"
    }

    mutate {
      rename => [ "lastUpdateTime", "timestamp" ]
      rename => [ "total", "rubrikSpaceTotal" ]
      rename => [ "used", "rubrikSpaceUsed" ]
      rename => [ "available", "rubrikSpaceAvailable" ]
      rename => [ "snapshot", "rubrikSpaceSnapshot" ]
      rename => [ "liveMount", "rubrikSpaceLiveMount" ]
      rename => [ "pendingSnapshot", "rubrikSpacePendingSnapshot" ]
      rename => [ "cdp", "rubrikSpaceCDP" ]
      rename => [ "miscellaneous", "rubrikSpaceMisc" ]

      rename => [ "totalProtected", "rubrikTotalProtected" ]
      rename => [ "numberOfInComplianceSnapshots", "rubrikInCompliance" ]
      rename => [ "numberOfOutOfComplianceSnapshots", "rubrikOutCompliance" ]
      rename => [ "percentOfInComplianceSnapshots", "rubrikPctInCompliance" ]
      rename => [ "percentOfOutOfComplianceSnapshots", "rubrikPctOutCompliance" ]
      rename => [ "updatedTime", "rubrikComplianceTime" ]
    }

    date {
      match => [ "scriptRunTime" , "ISO8601" ]
      target => "@timestamp"
    }

    prune {
      whitelist_names => [ "timestamp", "type", "index", "rubrikClusterName", "rubrikSpaceTotal",
        "rubrikSpaceUsed", "rubrikSpaceAvailable", "rubrikSpaceSnapshot", "rubrikSpaceLiveMount",
        "rubrikSpacePendingSnapshot", "rubrikSpaceCDP", "rubrikSpaceMisc", "rubrikUsedPct",
        "rubrikTotalProtected", "rubrikInCompliance", "rubrikOutCompliance",
        "rubrikPctInCompliance", "rubrikPctOutCompliance", "rubrikComplianceTime",
        "rubrikNodesGood", "rubrikNodesBad", "rubrikNodesTotal"  ]
    }
  }
}

output {
  if [type] == "beats" {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logstash-rubrik-filebeat"
    }

    stdout { codec => rubydebug }

  }
}
